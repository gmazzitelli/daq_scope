services:
  daq:
    container_name: daq
    image: gmazzitelli/daq:1.0
    ports:
      - 8888:8888
    user: root                
    working_dir: /home/jovyan/work
    privileged: true
    environment:
      GRANT_SUDO: 'yes'
      REPO_LIST: 'sft.cern.ch'
      IAM_CLIENT_SECRET: ${IAM_CLIENT_SECRET}
      IAM_CLIENT_ID: ${IAM_CLIENT_ID}
      IAM_TOKEN_ENDPOINT: ${IAM_TOKEN_ENDPOINT}
    volumes:
      - /Volumes/WC:/home/jovyan/work/data
      - "$PWD/../:/home/jovyan/work"
      - daq:/cvmfs 
    networks:
      - internal_network
    stdin_open: true  
    tty: true 
    command: bash -c "/mount_cvmfs.sh & tini -g -- start-notebook.py"

  cvmfs:
    image: registry.cern.ch/cvmfs/service
    restart: unless-stopped
    container_name: cvmfs
    environment: 
      CVMFS_CLIENT_PROFILE: 'single'
      CVMFS_REPOSITORIES: 'sft.cern.ch'
    privileged: true
    devices:
      - /dev/fuse
    volumes:
      - daq:/cvmfs
    networks:
      - internal_network

  ssh-socks-proxy:
    image: ssh-socks-proxy
    container_name: ssh-socks-proxy
    volumes:
      - "$PWD/../.ssh/spaip_rsa:/root/.ssh/id_rsa"
    networks:
      - internal_network
    entrypoint: ["/entrypoint.sh"]

  tokener:
    image: gmazzitelli/tokener:v0.2
    container_name: tokener
    environment:
      REFRESH_TOKEN: ${REFRESH_TOKEN}
      IAM_CLIENT_SECRET: ${IAM_CLIENT_SECRET}
      IAM_CLIENT_ID: ${IAM_CLIENT_ID}
      IAM_TOKEN_ENDPOINT: ${IAM_TOKEN_ENDPOINT}
      SCOPES: ${SCOPES}
      TOKEN_FILE: '/tmp/token'
    volumes:
      - "$PWD/../.token:/tmp/token"
    networks:
      - internal_network

networks:
  internal_network:
    driver: bridge

volumes:
  daq:
    driver: local
